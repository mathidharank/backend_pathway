#!/usr/bin/env node
'use strict'

const min = require('minimist')
const path = require('path')

// Get and parse argv
const baseArgv = process.argv.slice(2)
const argv = min(baseArgv, {
  boolean: true
})

// Get file path
const file = argv._[0]

// Print usage info as needed.
if (!file || argv.help) {
  console.warn('Usage:  node-ao [file] [arg]...')
  process.exit()
}

// Find position of file in argv
let start = 0
for (let i = 0; i < baseArgv.length; i++) {
  if (baseArgv[i] === file) {
    start = i
    break
  }
}

// Remove wrapper args
process.argv = process.argv.slice(0, 2).concat(baseArgv.slice(start))

// Load appoptics
/*global ao*/
global.ao = require('..')

// Set trace mode, if available
if (argv.always) {
  ao.sampleMode = 'always'
} else if (argv.never) {
  ao.sampleMode = 'never'
}

// Set sample rate, if available
if (argv.sample_rate) {
  ao.sampleRate = argv.sample_rate
}

// Define list of flags to pass through
const passthroughs = [
  'sampleRate',
  'traceMode'
]

// Pass through flag values to configs
passthroughs.forEach(function (name) {
  if (argv[name]) {
    ao[name] = argv[name]
  }
})

// Load entrypoint file
require(path.resolve(process.cwd(), file))

